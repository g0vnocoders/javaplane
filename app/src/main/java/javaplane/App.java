/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package javaplane;

import javax.swing.*;

import javaplane.Event.BBClickListener;
import javaplane.Event.RepaintListener;
import javaplane.Graphics.LayerManager;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

//основна панель для малювання
class AppCanvas extends JPanel {
    Boolean state = false;
    private LayerManager layerManager = null;//шари зображень
    private App app = null;//головний клас
    public AppCanvas(LayerManager lm, App app){
        this.app = app;
        layerManager = lm;
        //resize to bg image size
        Image bg = layerManager.background;
        setPreferredSize(new Dimension(bg.getWidth(null),bg.getHeight(null)));
        setBackground(Color.BLACK);
        setDoubleBuffered(true);
        setFocusable(true);
        requestFocus();
    }

    //перемальовуємо панель
    @Override
    protected void paintComponent(Graphics g){
        g.setColor(Color.red);
        // Perform your rendering operations on the off-screen buffer
        layerManager.paint(g);
        //call all repaint listeners of app
        for (RepaintListener listener : app.repaintListeners) {
            listener.repaintRequested(g);
        }
        
        g.dispose();
    }
}

public class App extends JFrame implements ActionListener {
    private boolean isRedState = true;
    private LayerManager layerManager = new LayerManager();
    public List<RepaintListener> repaintListeners = new ArrayList<>();
    public AppCanvas canvas;
    
    public App() {
        super("JavaPlane");
        // Set up the UI and buttons.
        JButton changeStateButton = new JButton("Change Lamp Color");
        changeStateButton.addActionListener(this);
        JPanel buttonPanel = new JPanel();
        buttonPanel.add(changeStateButton);
        getContentPane().add(buttonPanel, BorderLayout.SOUTH);

        //resize to bg image size
        setSize(layerManager.background.getWidth(null), layerManager.background.getHeight(null));
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        //add canvas
        canvas = new AppCanvas(layerManager, this);
        add(canvas);
        //add event manager
        EventManager eventManager = new EventManager(this);
        //add hitbox
        eventManager.registerClickEvent("Турбіна", new Rectangle(0, 0, 100, 100), new BBClickListener() {
            public void onClick() {
                layerManager.toggleLayerState("1.png");
                repaint();
            }
        });

    }
    //перемальовуємо вікно разом з панеллю
    public void repaint(){
        System.out.println("repaint");
        super.repaint();
        canvas.revalidate();
        canvas.repaint();
    }
    //глобальний обробник подій
    public void actionPerformed(ActionEvent e) {
        if (e.getActionCommand().equals("Change Lamp Color")) {
            isRedState = !isRedState;
            layerManager.toggleLayerState("1.png");
            repaint();
        }
    }

    public static void main(String[] args) {
        System.setProperty("sun.java2d.uiScale", "1");
        SwingUtilities.invokeLater(() -> {
            App app = new App();
            app.setVisible(true);
        });
    }
}
